---
title: famCHESS Cleaning EDA
author: Kendra Wyant
editor_options: 
  chunk_output_type: console
---

## Notes

This script reads in the cleaned famCHESS data and performs EDA on final variables.


## Setup

```{r}
options(conflicts.policy = "depends.ok")
suppressMessages(library(tidyverse))
suppressMessages(library(janitor))
library(Matrix, exclude = c("expand", "pack", "unpack"))
library(lme4)
theme_set(theme_classic()) 

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
path_data <- format_path("studydata/famchess")
```


## Data

### Cleaning

```{r}
data <- haven::read_sav(here::here(path_data, "Famchess_clean_combined_FINAL.sav")) |> 
  clean_names() 

dsm <- haven::read_sav(here::here(path_data, "FamCHESS_DSM5.sav")) |> 
  clean_names() # for stratification check
```

Change labeled classes to factor, clean up names, and merge data
```{r}
data <- data |> 
  mutate(dyad = sjlabelled::as_label(dyad, keep.labels = TRUE),
         arm = sjlabelled::as_label(arm, keep.labels = TRUE),
         group = sjlabelled::as_label(group, keep.labels = TRUE),
         time = sjlabelled::as_label(time, keep.labels = TRUE),
         gender = sjlabelled::as_label(gender, keep.labels = TRUE),
         edu = sjlabelled::as_label(edu, keep.labels = TRUE),
         ethnicity = sjlabelled::as_label(ethnicity, keep.labels = TRUE),
         income = sjlabelled::as_label(income, keep.labels = TRUE),
         partner_relationship = sjlabelled::as_label(partner_relationship, keep.labels = TRUE),
         employment = sjlabelled::as_label(employment, keep.labels = TRUE),
         meetings_yn = sjlabelled::as_label(meetings_yn, keep.labels = TRUE),
         outpatient_yn_ever = sjlabelled::as_label(outpatient_yn_ever, keep.labels = TRUE),
         other_psych_treatment_yn = sjlabelled::as_label(other_psych_treatment_yn, keep.labels = TRUE),
         er_yn_ever = sjlabelled::as_label(er_yn_ever, keep.labels = TRUE),
         mat_yn = sjlabelled::as_label(mat_yn, keep.labels = TRUE),
         healthservice_6 = sjlabelled::as_label(healthservice_6, keep.labels = TRUE),
         inpatient_yn_ever = sjlabelled::as_label(inpatient_yn_ever, keep.labels = TRUE),
         r_eadmits_yn = sjlabelled::as_label(r_eadmits_yn, keep.labels = TRUE),
         relationship_status = sjlabelled::as_label(relationship_status, keep.labels = TRUE)) |> 
  rename(readmits_yn = r_eadmits_yn,
         other_medications_yn = healthservice_6)


data <- data |> 
  left_join(dsm |> 
              mutate(dsm5_criteria = sjlabelled::as_label(dsm5_criteria, keep.labels = TRUE)) |> 
              select(study_id, dsm5_criteria), by = "study_id")
```


Remove participants with inaccurate data (from Olivia's script):  

- 167PT (baseline and 4 month): FAM passed away after baseline
- 208FAM & 208PT (noted on all timepoints): Might be wholly unreliable since we suspect he is his own partner
- 365PT (noted on 1 timepoint): Answered relationship questions about her dog, not her son
- 365FAM (noted on 1 timepoint): Answered relationship questions about romantic partner, not his mom

```{r}
data <- data |> 
  filter(!study_id %in% c("167PT", "208FAM", "208PT", "365PT", "365FAM"))
```

195PT: reported prefer not to say for gender on baseline but reported male in TLFB data. Changing to male to match TLFB.
```{r}
data <- data |> 
  mutate(gender = if_else(study_id == "195PT", "Man", gender))
```


Gender - 2 levels (male / non-male) - TLFB is also coded this way   

- 500PT: non-binary
- 128FAM: Transgender women

```{r}
data <- data |> 
  mutate(gender_original = factor(gender), 
         gender = if_else(gender != "Man", "non-male", "male"),
         gender = factor(gender, levels = c("non-male", "male")))

tabyl(data$gender_original)
tabyl(data$gender)
```


Create binary covariate for race/ethnicity defined as: White only (non-Hispanic) vs. not White only   
```{r}
data <- data |> 
  mutate(race_white_only = as.factor(if_else(ethnicity == "No" & race_1 == 1 &
                                     race_2 == 0 & race_3 == 0 &
                                     race_4 == 0 & race_5 == 0 &
                                     race_6 == 0, "Yes", "No")))

tabyl(data$race_white_only)
```



Recode data to have baseline scores of outcomes as variables for covariates   

```{r}
baseline_values <- data |>  
  filter(time == "Baseline") |> 
  select(study_id, 
         hdd_0 = per_heavy_drink_days, 
         pda_0 = per_days_abstinent, 
         oq45_0 = oq45_scored, 
         relationsatisf_0 = relationsatisf_scored, 
         abuse_0 = abuse_scored)

data <- data |> 
  filter(time != "Baseline") |> 
  full_join(baseline_values, by = "study_id")
```


*KW: 36 study_ids provided baseline info but no data at later time points - remove study_ids and corresponding dyad (53 participants in total)?*
```{r}
baseline_values |> 
  filter(!study_id %in% subset(data, time != "Baseline")$study_id) |> 
  print(n = Inf)
```

```{r}
dyad_ids <- baseline_values |> 
  mutate(dyad_id = str_sub(study_id, 1, 3)) |> 
  filter(!study_id %in% subset(data, time != "Baseline")$study_id) |> 
  pull(dyad_id) |> 
  unique()
  
data |> 
  mutate(dyad_id = str_sub(study_id, 1, 3)) |> 
  filter(dyad_id %in% dyad_ids) |> 
  select(study_id, dyad_id) |> 
  unique() |> 
  arrange(dyad_id) |> 
  print(n = Inf)

data <- data |> 
  mutate(dyad_id = str_sub(study_id, 1, 3)) |> 
  filter(!dyad_id %in% dyad_ids) |> 
  select(-dyad_id)
```


### EDA

Remove vars not used in analyses (e.g., keep scale score and remove individual items).   

*KW: COVID acute/residual symptoms was originally listed as covariate but was removed per measures doc (Participants interpreted question differently).*  

*KW: phq, promis, alcohol problems, loneliness, coping, interaction scales not scored or in measures doc. Removed from analyses data set.*  
```{r}
data <- data |> 
  select(-c(treatmentskills_1:treatmentskills_18_recode,
            oq45_1:oq45_45, alcoholproblems_1:alcoholproblems_15, 
            relationsatisf_1:relationsatisf_8, phq_1:phq_8, 
            abuse_1:abuse_16_yes, promis29_1:promis29_8, 
            abuse_physical_scored:abuse_psychological_scored, gender_open,
            loneliness_1:loneliness_8, healthservice_1, healthservice_2,
            healthservice_3,healthservice_4,healthservice_5, 
            healthservice_5a_1:healthservice_5c, 
            healthservice_6a_1:healthservice_8a, healthservice_8b, 
            healthservice_9a, healthservice_9b, bonding_1:bonding_5, 
            socrates_1:socrates_20, coping_1:coping_25, 
            drinkinggoals:drinkinggoal_7_text, covid_1:covid_3f,
            interaction_1:interaction_20, drink_druguse_1:drinkdruguse_8d,
            employmentstatus:notemployed_open, ethnicity:race_open, 
            livewith_1:livewith_open, er_yn, outpatient_yn, 
            inpatient_yn, n_days, mean_drinks_per_day, per_drink_days, 
            covid_scored,redcap_event_name, recruitment_id, 
            socrates_recognition_scored, socrates_ambivalence_scored)) |> 
  relocate(study_id) |> 
  glimpse()
```

`time_string` matches `time` - remove `time_string`
```{r}
data |> 
  tabyl(time, time_string)

data <- data |> 
  select(-time_string)
```


Number of participants
```{r}
data |> 
  pull(study_id) |>
  unique() |> 
  length() # 340

data |> 
  filter(dyad == "Partner") |>
  pull(study_id) |> 
  unique() |> 
  length()

data |> 
  filter(dyad == "Patient") |> 
  pull(study_id) |> 
  unique() |> 
  length()
```

Complete dyad (patient + partner) for all participants
```{r}
data |> 
  select(study_id) |> 
  unique() |> 
  mutate(dyad_id = str_sub(study_id, 1, 3)) |> 
  group_by(dyad_id) |> 
  count() |> 
  filter(n != 2)
```


Missing data 

```{r}
data |> 
  naniar::miss_var_summary() |> 
  print(n = Inf)
```

Missing data for just patients     

- treatmentskills not applicable to patients
- abuse and readmits have high missing data
- Why days_app_use missing so high? 

```{r}
data |> 
  filter(dyad == "Patient") |> 
  naniar::miss_var_summary() |> 
  print(n = Inf)
```

Remove `readmits_yn` as covariate due to high missing data   

```{r}
data <- data |> 
  select(-readmits_yn)
```

Missing data for partners

```{r}
data |> 
  filter(dyad == "Partner") |> 
  naniar::miss_var_summary() |> 
  print(n = Inf)
```

*KW: Why abuse and days_app_use so high for partners and patients?*


Participants in each arm
```{r}
data |> 
  group_by(study_id) |> 
  slice(1) |> 
  tabyl(arm)
```


Check stratification variables in arms 

patient gender identity  
```{r}
data |> 
  filter(dyad == "Patient") |> 
  group_by(study_id) |> 
  slice(1) |> 
  tabyl(arm, gender)
```


alcohol use severity (moderate or severe AUD vs mild)  
```{r}
data |> 
  filter(dyad == "Patient") |>
  mutate(dsm5_criteria = if_else(dsm5_criteria == "Mild (2-3 symptoms)", 
                                 "Mild", "Moderate/Severe")) |> 
  group_by(study_id) |> 
  slice(1) |> 
  tabyl(arm, dsm5_criteria)
```


Study Notes
```{r}
data |> 
  filter(!comments == "") |> 
  pull(comments)
```

Income
```{r}
tabyl(data$income)
```

Partner relationship
```{r}
tabyl(data$partner_relationship)
```

Employment
```{r}
tabyl(data$employment)
```

Relationship status with partner
```{r}
tabyl(data$relationship_status)

data |> 
  filter(relationship_status == "Other" & relationship_status_open != "") |>
  pull(relationship_status_open)
```

univariate descriptives of covariates, mediators, moderators and outcome variables
```{r}
data |> 
  select(age, edu, days_app_use:abuse_0, -gender_original, 
         -relationship_status, - relationship_status_open) |> 
  skimr::skim()
```

Bivariate correlations with **Patient Primary Outcome** `per_heavy_drink_days`

```{r}
cor_patient <- data |> 
  filter(dyad == "Patient") |> 
  select(per_heavy_drink_days, gender:race_white_only, 
         -c(relationship_status_open, gender_original, treatmentskills_scored)) |> 
  mutate(across(where(is.factor), as.numeric)) |> 
  cor(use = "pairwise.complete.obs") |> 
  round(2)

cor_patient[,1]
```


Bivariate correlations with **Partner Primary Outcome** `oq45_scored`

```{r}
cor_partner <- data |> 
  filter(dyad == "Partner") |> 
  select(oq45_scored, gender:race_white_only, 
         -c(relationship_status_open, gender_original, 
            socrates_scored, dsm5_criteria, per_days_abstinent, 
            per_heavy_drink_days)) |> 
  mutate(across(where(is.factor), as.numeric)) |> 
  cor(use = "pairwise.complete.obs") |> 
  round(2)

cor_partner[,1]
```


### Save out processed data for analyses
```{r}
data |> 
  write_csv(here::here(path_data, "famchess_data_ana.csv"))
```

